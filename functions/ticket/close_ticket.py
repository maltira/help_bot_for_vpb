from aiogram import Router
from aiogram.types import CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup

from config import db, ADMIN_ID
from functions.ticket.log_ticket import log_ticket_message

router = Router()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–ª–±–µ–∫–∞ /close-ticket
@router.callback_query(lambda c: c.data.startswith('close-ticket_'))
async def close_ticket(callback_query: CallbackQuery):
    uid = callback_query.from_user.id
    access = await db.get_bot_mode()
    if access['mode'] == 'activate' or str(uid) == ADMIN_ID:
        bt1 = InlineKeyboardButton(text="‚óÄÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='start')
        ticket_id = callback_query.data.split('_')[1]
        res = await db.close_ticket(callback_query.from_user.id, int(ticket_id))

        n = '0' * (5 - len(ticket_id)) + ticket_id
        if res['status']:

            res = await callback_query.message.edit_text(
                f'‚úÖ *–¢–∏–∫–µ—Ç ‚Ññ{n}*\n'
                '–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã–ª–∏ —Ç–∏–∫–µ—Ç, –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –¥—Ä—É–≥–∏–µ –≤–æ–ø—Ä–æ—Å—ã ‚Äî —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —Ç–∏–∫–µ—Ç',
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[[bt1]]),
                parse_mode='Markdown'
            )
            log_ticket_message(n, res)
        else:
            bt2 = InlineKeyboardButton(text="‚ùå –ó–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç", callback_data=f'close-ticket_{ticket_id}')
            await callback_query.message.edit_text(
                '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç –ø–æ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–æ–π –æ—à–∏–±–∫–µ, —Å–∫–æ—Ä–æ –≤ —á–∞—Ç –Ω–∞–ø–∏—à–µ—Ç —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –∏ –∑–∞–∫—Ä–æ–µ—Ç –µ–≥–æ!',
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[[bt1], [bt2]]),
                parse_mode='Markdown'
            )
    else:
        await callback_query.message.answer('üîÑÔ∏è –°–µ—Ä–≤–∏—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç–∞—Ö, —Å–∫–æ—Ä–æ –≤—Å—ë –ø—Ä–∏–¥—ë—Ç –≤ –Ω–æ—Ä–º—É')
    await callback_query.answer()


