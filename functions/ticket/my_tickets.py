from aiogram import Router
from aiogram.types import CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup

from config import db, ADMIN_ID

router = Router()

@router.callback_query(lambda c: c.data == 'my-tickets')
async def my_tickets(callback_query: CallbackQuery):
    uid = callback_query.from_user.id
    access = await db.get_bot_mode()
    if access['mode'] == 'activate' or str(uid) == ADMIN_ID:
        data = await db.get_open_ticket(uid)
        buttons = []
        if data['status']:
            data = data['list']
            if data:
                icon = '‚úÖ ' if data['status'] == 'closed' else ''
                buttons.append([InlineKeyboardButton(text=icon + f'–¢–∏–∫–µ—Ç ‚Ññ{data['id']}', callback_data=f'show-ticket_{data['id']}')])
                buttons.append([InlineKeyboardButton(text='‚óÄÔ∏è –ù–∞–∑–∞–¥', callback_data='start')])
                await callback_query.message.edit_text(
                    f'–ó–¥–µ—Å—å –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤—Å–µ —Ç–≤–æ–∏ *–∞–∫—Ç–∏–≤–Ω—ã–µ —Ç–∏–∫–µ—Ç—ã:*',
                    reply_markup=InlineKeyboardMarkup(inline_keyboard=buttons),
                    parse_mode='Markdown'
                )
            else:
                buttons.append([InlineKeyboardButton(text='‚óÄÔ∏è –ù–∞–∑–∞–¥', callback_data='start')])
                await callback_query.message.edit_text(
                    '–ü–æ–∫–∞ —á—Ç–æ —Ç—ã –Ω–µ —Å–æ–∑–¥–∞–ª –Ω–∏ –µ–¥–∏–Ω–æ–≥–æ —Ç–∏–∫–µ—Ç–∞ ‚ö°',
                    reply_markup=InlineKeyboardMarkup(inline_keyboard=buttons),
                )
        else:
            buttons.append([InlineKeyboardButton(text='‚óÄÔ∏è –ù–∞–∑–∞–¥', callback_data='start')])
            await callback_query.message.edit_text(
                '‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ç–∏–∫–µ—Ç–æ–≤, –µ—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è, –Ω–∞–ø–∏—à–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É @sselanium',
                reply_markup=InlineKeyboardMarkup(inline_keyboard=buttons),
            )
    else:
        await callback_query.message.answer('üîÑÔ∏è –°–µ—Ä–≤–∏—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç–∞—Ö, —Å–∫–æ—Ä–æ –≤—Å—ë –ø—Ä–∏–¥—ë—Ç –≤ –Ω–æ—Ä–º—É')
    await callback_query.answer()

@router.callback_query(lambda c: c.data.startswith('show-ticket_'))
async def show_ticket(callback_query: CallbackQuery):
    ticket_id = callback_query.data.split('_')[1]
    uid = callback_query.from_user.id
    access = await db.get_bot_mode()
    if access['mode'] == 'activate' or str(uid) == ADMIN_ID:
        data = await db.get_ticket(uid)
        if data['status']:
            data = data['ticket']
            if data is not None:
                buttons = [[InlineKeyboardButton(text='–ó–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç', callback_data=f'close-ticket_{ticket_id}')],
                           [InlineKeyboardButton(text='‚óÄÔ∏è –ù–∞–∑–∞–¥', callback_data='my-tickets')]]
                await callback_query.message.edit_text(
                    f'*–¢–∏–∫–µ—Ç ‚Ññ{data['id']}*\n'
                    f'```\n{data['message']}\n```\n'
                    f'üü¢ –°—Ç–∞—Ç—É—Å: *{data['status']}*',
                    parse_mode='Markdown',
                    reply_markup=InlineKeyboardMarkup(inline_keyboard=buttons)
                )
            else:
                buttons = [[InlineKeyboardButton(text='‚óÄÔ∏è –ù–∞–∑–∞–¥', callback_data='my-tickets')]]
                await callback_query.message.edit_text(
                    f'–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ —Ç–∏–∫–µ—Ç—É',
                    reply_markup=InlineKeyboardMarkup(inline_keyboard=buttons)
                )
        else:
            buttons = [[InlineKeyboardButton(text='‚óÄÔ∏è –ù–∞–∑–∞–¥', callback_data='start')]]
            await callback_query.message.edit_text(
                '‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ç–∏–∫–µ—Ç–æ–≤, –µ—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è, –Ω–∞–ø–∏—à–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É @sselanium',
                reply_markup=InlineKeyboardMarkup(inline_keyboard=buttons),
            )
    else:
        await callback_query.message.answer('üîÑÔ∏è –°–µ—Ä–≤–∏—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç–∞—Ö, —Å–∫–æ—Ä–æ –≤—Å—ë –ø—Ä–∏–¥—ë—Ç –≤ –Ω–æ—Ä–º—É')
    await callback_query.answer()